#一个实体类对应两张表
spring.main.allow-bean-definition-overriding=true

#配置数据源，给数据源起名称,配置两个数据源，分库分表
spring.shardingsphere.datasource.names=m1,m2

#配置第一个数据源的连接池，驱动，地址，用户名，密码
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://192.168.106.139:3306/edu_db_1
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=977721Fs

#配置第二个数据源的连接池，驱动，地址，用户名，密码
spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://192.168.106.139:3306/edu_db_2
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=977721Fs

#指定数据库分布情况，数据库里面表的分布情况
#m1 m2 course_1 course_2
spring.shardingsphere.sharding.tables.course.actual-data-nodes=m$->{1..2}.course_$->{1..2}

#指定course表里面的主键cid 生成策略 SNOWLAKE
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE

#指定表分片策略 约定cid 值偶数添加到course――1表 ，如果cid是奇数添加到course_2表
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid%2 +1}

#指定数据库的分片策略 约定user_id是偶数添加m1，是奇数添加m2
#针对所有表
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=m$->{user_id%2 +1}

#针对单独的表分配规则
spring.shardingsphere.sharding.tables.course.database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.course.database-strategy.inline.algorithm-expression=m$->{user_id%2 +1}

#打开sql输出日志
spring.shardingsphere.props.sql.show=true
